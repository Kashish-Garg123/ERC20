/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { A, AInterface } from "../../../contracts/TokenLottery.sol/A";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600481526020017f474f4c44000000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f536f6e610000000000000000000000000000000000000000000000000000000081525081600390816200008f919062000512565b508060049081620000a1919062000512565b50505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200011b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611b586200012160201b60201c565b62000714565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000193576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200018a906200065a565b60405180910390fd5b620001a7600083836200028e60201b60201c565b8060026000828254620001bb9190620006ab565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200026e9190620006f7565b60405180910390a36200028a600083836200029360201b60201c565b5050565b505050565b505050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200031a57607f821691505b60208210810362000330576200032f620002d2565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200039a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200035b565b620003a686836200035b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003f3620003ed620003e784620003be565b620003c8565b620003be565b9050919050565b6000819050919050565b6200040f83620003d2565b620004276200041e82620003fa565b84845462000368565b825550505050565b600090565b6200043e6200042f565b6200044b81848462000404565b505050565b5b8181101562000473576200046760008262000434565b60018101905062000451565b5050565b601f821115620004c2576200048c8162000336565b62000497846200034b565b81016020851015620004a7578190505b620004bf620004b6856200034b565b83018262000450565b50505b505050565b600082821c905092915050565b6000620004e760001984600802620004c7565b1980831691505092915050565b6000620005028383620004d4565b9150826002028217905092915050565b6200051d8262000298565b67ffffffffffffffff811115620005395762000538620002a3565b5b62000545825462000301565b6200055282828562000477565b600060209050601f8311600181146200058a576000841562000575578287015190505b620005818582620004f4565b865550620005f1565b601f1984166200059a8662000336565b60005b82811015620005c4578489015182556001820191506020850194506020810190506200059d565b86831015620005e45784890151620005e0601f891682620004d4565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000642601f83620005f9565b91506200064f826200060a565b602082019050919050565b60006020820190508181036000830152620006758162000633565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620006b882620003be565b9150620006c583620003be565b9250828201905080821115620006e057620006df6200067c565b5b92915050565b620006f181620003be565b82525050565b60006020820190506200070e6000830184620006e6565b92915050565b6112a880620007246000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a35780638da5cb5b146101d357806395d89b41146101f1578063a457c2d71461020f578063a9059cbb1461023f578063dd62ed3e1461026f576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029f565b6040516100ce9190610b5b565b60405180910390f35b6100f160048036038101906100ec9190610c16565b610331565b6040516100fe9190610c71565b60405180910390f35b61010f610354565b60405161011c9190610c9b565b60405180910390f35b61013f600480360381019061013a9190610cb6565b61035e565b60405161014c9190610c71565b60405180910390f35b61015d61038d565b60405161016a9190610d25565b60405180910390f35b61018d60048036038101906101889190610c16565b610396565b60405161019a9190610c71565b60405180910390f35b6101bd60048036038101906101b89190610d40565b6103cd565b6040516101ca9190610c9b565b60405180910390f35b6101db610415565b6040516101e89190610d7c565b60405180910390f35b6101f961043b565b6040516102069190610b5b565b60405180910390f35b61022960048036038101906102249190610c16565b6104cd565b6040516102369190610c71565b60405180910390f35b61025960048036038101906102549190610c16565b610544565b6040516102669190610c71565b60405180910390f35b61028960048036038101906102849190610d97565b610567565b6040516102969190610c9b565b60405180910390f35b6060600380546102ae90610e06565b80601f01602080910402602001604051908101604052809291908181526020018280546102da90610e06565b80156103275780601f106102fc57610100808354040283529160200191610327565b820191906000526020600020905b81548152906001019060200180831161030a57829003601f168201915b5050505050905090565b60008061033c6105ee565b90506103498185856105f6565b600191505092915050565b6000600254905090565b6000806103696105ee565b90506103768582856107bf565b61038185858561084b565b60019150509392505050565b60006012905090565b6000806103a16105ee565b90506103c28185856103b38589610567565b6103bd9190610e66565b6105f6565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606004805461044a90610e06565b80601f016020809104026020016040519081016040528092919081815260200182805461047690610e06565b80156104c35780601f10610498576101008083540402835291602001916104c3565b820191906000526020600020905b8154815290600101906020018083116104a657829003601f168201915b5050505050905090565b6000806104d86105ee565b905060006104e68286610567565b90508381101561052b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052290610f0c565b60405180910390fd5b61053882868684036105f6565b60019250505092915050565b60008061054f6105ee565b905061055c81858561084b565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610665576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065c90610f9e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cb90611030565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107b29190610c9b565b60405180910390a3505050565b60006107cb8484610567565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108455781811015610837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082e9061109c565b60405180910390fd5b61084484848484036105f6565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b19061112e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610929576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610920906111c0565b60405180910390fd5b610934838383610ac1565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156109ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b190611252565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610aa89190610c9b565b60405180910390a3610abb848484610ac6565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b05578082015181840152602081019050610aea565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b2d82610acb565b610b378185610ad6565b9350610b47818560208601610ae7565b610b5081610b11565b840191505092915050565b60006020820190508181036000830152610b758184610b22565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bad82610b82565b9050919050565b610bbd81610ba2565b8114610bc857600080fd5b50565b600081359050610bda81610bb4565b92915050565b6000819050919050565b610bf381610be0565b8114610bfe57600080fd5b50565b600081359050610c1081610bea565b92915050565b60008060408385031215610c2d57610c2c610b7d565b5b6000610c3b85828601610bcb565b9250506020610c4c85828601610c01565b9150509250929050565b60008115159050919050565b610c6b81610c56565b82525050565b6000602082019050610c866000830184610c62565b92915050565b610c9581610be0565b82525050565b6000602082019050610cb06000830184610c8c565b92915050565b600080600060608486031215610ccf57610cce610b7d565b5b6000610cdd86828701610bcb565b9350506020610cee86828701610bcb565b9250506040610cff86828701610c01565b9150509250925092565b600060ff82169050919050565b610d1f81610d09565b82525050565b6000602082019050610d3a6000830184610d16565b92915050565b600060208284031215610d5657610d55610b7d565b5b6000610d6484828501610bcb565b91505092915050565b610d7681610ba2565b82525050565b6000602082019050610d916000830184610d6d565b92915050565b60008060408385031215610dae57610dad610b7d565b5b6000610dbc85828601610bcb565b9250506020610dcd85828601610bcb565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e1e57607f821691505b602082108103610e3157610e30610dd7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e7182610be0565b9150610e7c83610be0565b9250828201905080821115610e9457610e93610e37565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610ef6602583610ad6565b9150610f0182610e9a565b604082019050919050565b60006020820190508181036000830152610f2581610ee9565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f88602483610ad6565b9150610f9382610f2c565b604082019050919050565b60006020820190508181036000830152610fb781610f7b565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061101a602283610ad6565b915061102582610fbe565b604082019050919050565b600060208201905081810360008301526110498161100d565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611086601d83610ad6565b915061109182611050565b602082019050919050565b600060208201905081810360008301526110b581611079565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611118602583610ad6565b9150611123826110bc565b604082019050919050565b600060208201905081810360008301526111478161110b565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006111aa602383610ad6565b91506111b58261114e565b604082019050919050565b600060208201905081810360008301526111d98161119d565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061123c602683610ad6565b9150611247826111e0565b604082019050919050565b6000602082019050818103600083015261126b8161122f565b905091905056fea26469706673582212207fb7de43eebfc556435e6cf656af5d7d55d0eed365a82af30aad82251a2b8af764736f6c63430008110033";

type AConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class A__factory extends ContractFactory {
  constructor(...args: AConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<A> {
    return super.deploy(overrides || {}) as Promise<A>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): A {
    return super.attach(address) as A;
  }
  override connect(signer: Signer): A__factory {
    return super.connect(signer) as A__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AInterface {
    return new utils.Interface(_abi) as AInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): A {
    return new Contract(address, _abi, signerOrProvider) as A;
  }
}
